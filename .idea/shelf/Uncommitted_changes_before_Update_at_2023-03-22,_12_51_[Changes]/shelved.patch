Index: src/main/java/group1/project12group1/GUIpart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group1.project12group1;\nimport helperFunction.HelperFunctions;\nimport javafx.animation.AnimationTimer;\nimport javafx.application.Application;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.paint.Color;\nimport javafx.scene.paint.PhongMaterial;\nimport javafx.scene.shape.Sphere;\nimport javafx.stage.Screen;\nimport javafx.stage.Stage;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\nimport static group1.project12group1.PlanetObject.helperFunctions;\n\n\npublic class GUIpart extends Application\n{\n    public static PlanetObject Sun = new PlanetObject(0, 0, 0, 0, 0, 0, 1.99e30);\n    public static PlanetObject Mercury = new PlanetObject(7.83e6, 4.49e7, 2.87e6, -5.75e1, 1.15e1, 6.22e0, 3.3e23);\n    public static PlanetObject Venus = new PlanetObject(-2.82e7, 1.04e8, 3.01e6, -3.4e1, -8.97e0, 1.84e0, 4.87e24);\n    public static PlanetObject Earth = new PlanetObject(-1.48e8, -2.78e7, 3.37e4, 5.05e0, -2.94e1, 1.71e-3, 5.97e24);\n    public static PlanetObject Moon = new PlanetObject(-1.48e8, -2.75e7, 7.02e4, 4.34e0, -3.0e1, -1.16e2, 7.35e22);\n    public static PlanetObject Mars = new PlanetObject(-1.59e8, 1.89e8, 7.87e6, -1.77e1, -1.35e1, 1.52e-1, 6.42e23);\n    public static PlanetObject Jupiter = new PlanetObject(6.93e8, 2.59e8, -1.66e7, -4.71e0, 1.29e1, 5.22e-2, 1.90e27);\n    public static PlanetObject Saturn = new PlanetObject(1.25e9, -7.60e8, -3.67e7, 4.47e0, 8.24e0, -3.21e1, 5.68e26);\n    public PlanetObject Titan = new PlanetObject(1.25e9, -7.61e8, -3.63e7, 9, 1.11e1, -2.25e0, 1.35e23);\n    public static PlanetObject Neptune = new PlanetObject(4.45e9, -3.98e8, -9.45e7, 4.48e-1, 5.45e0, -1.23e1, 1.02e26);\n    public static PlanetObject Uranus = new PlanetObject(1.96e9, 2.19e9, -1.72e7, -5.13e0, 4.22e0, 8.21e-2, 8.68e25);\n    private static ArrayList<PlanetObject> listOfPlanets = new ArrayList<>();\n    static double offsetWidth;\n    static double offsetHeight;\n    final double WIDTH = Screen.getPrimary().getBounds().getWidth();\n    final double HEIGHT = Screen.getPrimary().getBounds().getHeight();\n        static final int SCALE = 5_000_000;\n\n        public GUIpart()\n        {\n            listOfPlanets.add(Sun);\n            Sun.setColor(Color.YELLOW);\n            listOfPlanets.add(Mercury);\n            Mercury.setColor(Color.ORANGE);\n            listOfPlanets.add(Venus);\n            Venus.setColor(Color.RED);\n            listOfPlanets.add(Earth);\n            Earth.setColor(Color.LIGHTBLUE);\n            listOfPlanets.add(Moon);\n            Moon.setColor(Color.GREY);\n            listOfPlanets.add(Mars);\n            Mars.setColor(Color.GREEN);\n            listOfPlanets.add(Jupiter);\n            Jupiter.setColor(Color.PINK);\n            listOfPlanets.add(Saturn);\n            listOfPlanets.add(Neptune);\n            Neptune.setColor(Color.DARKBLUE);\n            listOfPlanets.add(Uranus);\n            Uranus.setColor(Color.PURPLE);\n            offsetWidth  =WIDTH/2;\n            offsetHeight  =HEIGHT/2;\n        }\n\n\n        @Override\n        public void start(Stage stage) throws IOException {\n            System.out.println(WIDTH+\"    \"+HEIGHT);\n\n            Group root = new Group();\n\n\n\n            HelperFunctions helperFunctions = new HelperFunctions();\n            Sphere planet=new Sphere();\n            //set cordinates\n            for (int i = 0; i <listOfPlanets.size() ; i++)\n            {\n                planet=listOfPlanets.get(i).getCircle();\n             double cordX=listOfPlanets.get(i).getZ();\n             cordX=cordX/SCALE;\n             cordX=cordX+offsetWidth;\n\n             double cordY=listOfPlanets.get(i).getX();\n             cordY=cordY/SCALE;\n             cordY=cordY+offsetHeight;\n             listOfPlanets.get(i).setX2D(cordX);\n             listOfPlanets.get(i).setY2D(cordY);\n             planet.setTranslateX(cordX);\n             planet.setTranslateY(cordY);\n                PhongMaterial material = new PhongMaterial();\n                material.setDiffuseColor(listOfPlanets.get(i).getColor());\n                material.setSpecularColor(listOfPlanets.get(i).getColor());\n            planet.setMaterial(material);\n\n             root.getChildren().add(planet);\n            }\n\n\n\n           orbit();\n\n\n\n\n\n            Scene scene = new Scene(root, WIDTH, HEIGHT);\n            stage.setTitle(\"Visualization\");\n            stage.setScene(scene);\n            stage.show();\n        }\n\n    private static AnimationTimer orbt_timer;\n     static void orbit(){\n\n        orbt_timer=new AnimationTimer() {\n            @Override\n            public void handle(long now)\n            {\n                long lastUpdate = 0;\n                if (now - lastUpdate >= 1_000_000_000)\n                {\n                    lastUpdate = now;\n                    int times=36000;\n\n                    for (int i = 0; i <times ; i++)\n                    {\n\n\n                        for (int j = 1; j < listOfPlanets.size(); j++)\n                        {\n\n                            double[] acc = new double[3];\n                            for (int k = 0; k < listOfPlanets.size(); k++)\n                            {\n                                if (k != j)\n                                {\n//                                    if(j<k)\n//                                    {\n                                        acc = helperFunctions.addition(acc, listOfPlanets.get(j).getForce(listOfPlanets.get(k)));\n//                                    }\n//                                    else\n//                                    {\n                                        acc = helperFunctions.addition(acc, listOfPlanets.get(j).getAcceleration(listOfPlanets.get(k)));\n                                   // }\n\n                                }\n\n                            }\n                            listOfPlanets.get(j).setPrivousPosition(listOfPlanets.get(j).getPositionalVector());\n                            listOfPlanets.get(j).updatePositionVelocityWithForce(acc, 0.1);\n                        }\n                    }\n\n                    for (int i = 1; i <listOfPlanets.size() ; i++)\n                    {\n\n                        PlanetObject venus = listOfPlanets.get(i);\n                        double cordX = listOfPlanets.get(i).getPositionalVector()[2];\n                        cordX = cordX / SCALE;\n                        cordX = cordX + offsetWidth;\n                        venus.getCircle().translateXProperty().set(cordX);\n\n\n                        double cordY = listOfPlanets.get(i).getPositionalVector()[1];\n                        cordY = cordY / SCALE;\n                        cordY = cordY + offsetHeight;\n                        venus.getCircle().translateYProperty().set(cordX);\n\n                    }\n\n\n                }\n            }\n\n\n        };orbt_timer.start();\n    }\n\n\n\n    public static void main(String[] args)\n    {\n        launch();\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group1/project12group1/GUIpart.java b/src/main/java/group1/project12group1/GUIpart.java
--- a/src/main/java/group1/project12group1/GUIpart.java	(revision 4e6482a155907092124b696f61df1e599d063418)
+++ b/src/main/java/group1/project12group1/GUIpart.java	(date 1679480678808)
@@ -142,8 +142,8 @@
 //                                    }
 //                                    else
 //                                    {
-                                        acc = helperFunctions.addition(acc, listOfPlanets.get(j).getAcceleration(listOfPlanets.get(k)));
-                                   // }
+//                                        acc = helperFunctions.addition(acc, listOfPlanets.get(j).getAcceleration(listOfPlanets.get(k)));
+//                                    }
 
                                 }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"13cb742e-4cc8-4686-864c-bc5cb4fb0b5a\" name=\"Changes\" comment=\"eeeeee\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/group1/project12group1/Visualizer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/group1/project12group1/Visualizer.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2NHEToQGlRKTbWGVth802s3yKhD\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"Project1.2 Group 1\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"Project1.2 Group 1\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"13cb742e-4cc8-4686-864c-bc5cb4fb0b5a\" name=\"Changes\" comment=\"\" />\n      <created>1679312618137</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1679312618137</updated>\n      <workItem from=\"1679312619245\" duration=\"1000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"idk\">\n      <created>1679470256005</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679470256005</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"eeeeee\">\n      <created>1679470612789</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679470612789</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"eeeeee\">\n      <created>1679471702019</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679471702019</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"idk\" />\n    <MESSAGE value=\"eeeeee\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"eeeeee\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4e6482a155907092124b696f61df1e599d063418)
+++ b/.idea/workspace.xml	(date 1679484893776)
@@ -5,13 +5,22 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="13cb742e-4cc8-4686-864c-bc5cb4fb0b5a" name="Changes" comment="eeeeee">
+      <change afterPath="$PROJECT_DIR$/src/main/java/group1/project12group1/SphereMotion.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/group1/project12group1/GUIpart.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group1/project12group1/GUIpart.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/group1/project12group1/Visualizer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group1/project12group1/Visualizer.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="PUSH_AUTO_UPDATE" value="true" />
@@ -86,7 +95,21 @@
       <option name="project" value="LOCAL" />
       <updated>1679471702019</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="eeeeee">
+      <created>1679472366236</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1679472366236</updated>
+    </task>
+    <task id="LOCAL-00005" summary="eeeeee">
+      <created>1679482846409</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1679482846409</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
Index: src/main/java/group1/project12group1/SphereMotion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group1/project12group1/SphereMotion.java b/src/main/java/group1/project12group1/SphereMotion.java
new file mode 100644
--- /dev/null	(date 1679484893756)
+++ b/src/main/java/group1/project12group1/SphereMotion.java	(date 1679484893756)
@@ -0,0 +1,76 @@
+package group1.project12group1;
+
+import javafx.application.Application;
+import javafx.scene.Group;
+import javafx.scene.Scene;
+import javafx.scene.paint.Color;
+import javafx.scene.shape.Sphere;
+import javafx.stage.Stage;
+
+public class SphereMotion extends Application {
+
+    private static final int WINDOW_WIDTH = 800;
+    private static final int WINDOW_HEIGHT = 600;
+    private static final int SPHERE_RADIUS = 50;
+    private static final int CENTER_X = WINDOW_WIDTH / 2;
+    private static final int CENTER_Y = WINDOW_HEIGHT / 2;
+
+    private Sphere sphere;
+    private Group root;
+
+    @Override
+    public void start(Stage primaryStage) {
+        // Create the sphere with initial position
+        sphere = new Sphere(SPHERE_RADIUS);
+        sphere.setTranslateX(CENTER_X);
+        sphere.setTranslateY(CENTER_Y);
+        sphere.setTranslateZ(0);
+        sphere.setMaterial(new javafx.scene.paint.PhongMaterial(Color.BLUE));
+
+        // Add the sphere to a group
+        root = new Group(sphere);
+
+        // Create the scene and add the group to it
+        Scene scene = new Scene(root, WINDOW_WIDTH, WINDOW_HEIGHT, Color.WHITE);
+
+        // Update the sphere's position periodically
+        updateSpherePosition();
+
+        primaryStage.setScene(scene);
+        primaryStage.show();
+    }
+
+    private void updateSpherePosition() {
+        // Update the sphere's position every second
+        new java.util.Timer().schedule(
+                new java.util.TimerTask() {
+                    @Override
+                    public void run() {
+                        // Calculate the new position
+                        double newX = CENTER_X + calculateNewX();
+                        double newY = CENTER_Y + calculateNewY();
+
+                        // Update the sphere's position
+                        sphere.setTranslateX(newX);
+                        sphere.setTranslateY(newY);
+                    }
+                },
+                0, // Start immediately
+                1000 // Update every second
+        );
+    }
+
+    private double calculateNewX() {
+        // Your X calculation code goes here
+        return Math.random() * 200 - 100;
+    }
+
+    private double calculateNewY() {
+        // Your Y calculation code goes here
+        return Math.random() * 200 - 100;
+    }
+
+    public static void main(String[] args) {
+        launch(args);
+    }
+}
